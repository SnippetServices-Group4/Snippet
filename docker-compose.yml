version: '3'

services:
  api:
    container_name: "${SPRING_APPLICATION_NAME}"
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${SPRING_PORT}:${SPRING_PORT}"
    environment:
      DB_USER: "${DB_USER}"
      DB_PASSWORD: "${DB_PASSWORD}"
      DB_NAME: "${DB_NAME}"
      DB_HOST: "${DB_HOST}"
      DB_PORT: "${DB_PORT}"
      SPRING_PORT: "${SPRING_PORT}"
      SPRING_APPLICATION_NAME: "${SPRING_APPLICATION_NAME}"
      PERMISSIONS_SERVICE_URL: "${PERMISSIONS_SERVICE_URL}"
      ASSET_SERVICE_URL: "${ASSET_SERVICE_URL}"
      REDIS_HOST: "${REDIS_HOST}"
      REDIS_PORT: "${REDIS_PORT}"
    depends_on:
      - db

  db:
    container_name: "${DB_HOST}"
    image: postgres:15
    environment:
      POSTGRES_DB: "${DB_NAME}"
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  # snippet-asset-service
  asset-api:
    container_name: "asset_service"
    image: ghcr.io/austral-ingsis/snippet-asset-service:latest
    ports:
      - "${ASSET_SERVICE_PORT}:8080"
    environment:
      AZURE_HOST: "http://azurite"
      NEW_RELIC_APP_NAME: "asset-service"
      NEW_RELIC_AGENT_ENABLED: "false"

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    container_name: "azurite-snippets"
    hostname: azurite-snippets
    restart: always
    ports:
      - "10000:10000"
      - "10001:10001"
      - "10002:10002"
    volumes:
      - blob:/workspace


volumes:
  db_data:
  blob:
    external: false
