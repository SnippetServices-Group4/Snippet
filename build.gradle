plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.services.group4.common-conventions' version '1.0.8'
}

group = 'com.services.group4'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
	maven {
		name = "GitHubPackages"
		url = "https://maven.pkg.github.com/austral-ingsis/class-redis-streams"
		credentials {
			username = project.findProperty("gpr.user") ?: System.getenv("GRAD_USER")
			password = project.findProperty("gpr.token") ?: System.getenv("GRAD_PASS")
		}
	}
}

ext {
	set('springCloudVersion', "2023.0.3")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	runtimeOnly 'org.postgresql:postgresql'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'io.github.cdimascio:dotenv-java:2.3.1'

    implementation 'com.squareup.okhttp3:okhttp:4.9.3'
    testImplementation 'org.mockito:mockito-core'
    implementation 'com.fasterxml.jackson.core:jackson-databind'


	compileOnly 'org.projectlombok:lombok:1.18.32'
	annotationProcessor 'org.projectlombok:lombok:1.18.32'

//	Redis dependencies
	implementation 'org.austral.ingsis:redis-streams-mvc:0.1.13'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive:+'
	implementation 'org.jetbrains:annotations:24.0.1'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

def basePackage = 'com/services/group4/snippet/'

jacocoTestReport {
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
					"${basePackage}DotenvConfig.class",
					"${basePackage}CorrelationIdFilter.class",
					"${basePackage}CorrelationIdInterceptor.class",
					"${basePackage}RequestLogFilter.class",
					"${basePackage}config/FeignConfig.class",
					"${basePackage}config/RestTemplateConfig.class",
					"${basePackage}controller/test/TestController.class",
					"${basePackage}model/CommunicationMessage.class",
					"${basePackage}security/WebConfig.class",
					"${basePackage}services/async/FinalFormatEventProducer.class",
					"${basePackage}services/async/FinalLintEventProducer.class",
					"${basePackage}services/async/FormatEventConsumer.class",
					"${basePackage}services/async/LintEventConsumer.class",
					"${basePackage}services/async/TestEventProducer.class",
					"${basePackage}services/async/MockTestEventConsumer.class",
					"${basePackage}dto/testCase/request.class",
					"${basePackage}dto/testCase/response.class",

					"${basePackage}services/async/FinalLintEventProducer\$*.class",
					"${basePackage}services/async/FormatEventConsumer\$*.class",
					"${basePackage}services/async/LintEventConsumer\$*.class",
					"${basePackage}services/async/MockTestEventConsumer\$*.class",
					"${basePackage}config/FeignConfig\$*.class",
            ])
        }))
    }
}

jacocoTestCoverageVerification {
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					"${basePackage}DotenvConfig.class",
					"${basePackage}CorrelationIdFilter.class",
					"${basePackage}CorrelationIdInterceptor.class",
					"${basePackage}RequestLogFilter.class",
					"${basePackage}config/FeignConfig.class",
					"${basePackage}config/RestTemplateConfig.class",
					"${basePackage}controller/test/TestController.class",
					"${basePackage}model/CommunicationMessage.class",
					"${basePackage}security/WebConfig.class",
					"${basePackage}services/async/FinalFormatEventProducer.class",
					"${basePackage}services/async/FinalLintEventProducer.class",
					"${basePackage}services/async/FormatEventConsumer.class",
					"${basePackage}services/async/LintEventConsumer.class",
					"${basePackage}services/async/TestEventProducer.class",
					"${basePackage}services/async/MockTestEventConsumer.class",
					"${basePackage}dto/testCase/request.class",
					"${basePackage}dto/testCase/response.class",
					"${basePackage}services/async/FinalLintEventProducer\$*.class",
					"${basePackage}services/async/FormatEventConsumer\$*.class",
					"${basePackage}services/async/LintEventConsumer\$*.class",
					"${basePackage}services/async/MockTestEventConsumer\$*.class",
					"${basePackage}config/FeignConfig\$*.class",

			])
		}))
	}
}